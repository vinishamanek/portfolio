---
import BaseLayout from '../layouts/base.astro';
import SectionContent from '../components/section-content.astro';
import AboutContent from '../components/about.astro';
import ProjectsContent from '../components/projects.astro';
import InterestsContent from '../components/etc.astro';
---

<BaseLayout>
  <main>
    <div id="intro">
      <h1 id="greeting">
        <span id="hi">hi!</span>
        <span id="name"> i'm vini :)</span>
      </h1>
    </div>

    <div id="content-container">
      <nav id="section-nav">
        <button class="nav-button active" data-section="about">about</button>
        <span class="separator">/</span>
        <button class="nav-button" data-section="projects">software</button>
        <span class="separator">/</span>
        <button class="nav-button" data-section="interests">interests</button>
      </nav>

      <div id="sections">
        <SectionContent id="about">
          <AboutContent />
        </SectionContent>

        <SectionContent id="projects">
          <ProjectsContent />
        </SectionContent>

        <SectionContent id="interests">
          <InterestsContent />
        </SectionContent>
      </div>
    </div>
  </main>
</BaseLayout>

<style>
  main {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2rem;
  }

  #intro {
    display: flex;
    justify-content: center;
    align-items: center;
    transform: translateY(-9vh);
  }

  h1 {
    font-size: 4rem;
    font-weight: bold;
    margin: 0;
    white-space: nowrap;
  }

  #hi {
    opacity: 0;
  }

  #name {
    opacity: 0;
    display: inline;
    max-width: 0;
    overflow: hidden;
    vertical-align: bottom;
  }

  #intro.fade-out {
    opacity: 0;
    transition: opacity 0.6s ease-out;
  }

  #content-container {
    display: none;
    width: 100%;
    max-width: 1200px;
    opacity: 0;
    transition: opacity 0.6s ease-in;
  }

  .animating #content-container {
    pointer-events: none;
  }

  #content-container.visible {
    opacity: 1;
  }

  #section-nav {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 1rem;
    flex-wrap: wrap;
  }

  .nav-button {
    background: none;
    border: none;
    color: white;
    font-size: 2rem;
    font-weight: bold;
    cursor: pointer;
    font-family: inherit;
    padding: 0.5rem;
    transition: color 0.3s ease, transform 0.2s ease;
    opacity: 0.5;
  }

  .nav-button:hover {
    opacity: 0.8;
    transform: scale(1.05);
  }

  .nav-button.active {
    opacity: 1;
    color: white;
  }

  .separator {
    font-size: 2rem;
    opacity: 0.3;
    user-select: none;
  }

  #sections {
    min-height: 400px;
    position: relative;
  }

  :global(#sections .section-content) {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
  }

  @media (max-width: 768px) {
    h1 {
      font-size: 2.5rem;
    }

    main {
      padding: 1rem;
    }

    #intro {
      transform: translateY(-6vh);
    }

    .nav-button {
      font-size: 1.5rem;
    }

    .separator {
      font-size: 1.5rem;
    }

    #section-nav {
      gap: 1rem;
    }
  }
</style>

<script>
  // animation for intro
  const hi = document.getElementById('hi');
  const name = document.getElementById('name');
  const intro = document.getElementById('intro');
  const contentContainer = document.getElementById('content-container');

  let animating = true;
  document.body.classList.add('animating');

  let tHi, tName, tFadeStart, tFadeEnd, tShowVisible;

  function finishAnim() {
    animating = false;
    document.body.classList.remove('animating');
    try {
      if (!window.__introExplodedDone) {
        window.__introExplodedDone = true;
        document.dispatchEvent(new CustomEvent('intro-finished'));
      }
    } catch (e) {
      // ignore if dispatch fails in older browsers
    }
  }

  function clearAllTimers() {
    [tHi, tName, tFadeStart, tFadeEnd, tShowVisible].forEach(id => {
      if (typeof id !== 'undefined') clearTimeout(id);
    });
  }

  function revealContentImmediately() {
    if (!animating) return;
    animating = false;
    document.body.classList.remove('animating');
    clearAllTimers();

    if (hi) {
      hi.style.transition = 'none';
      hi.style.opacity = '1';
    }
    if (name) {
      name.style.transition = 'none';
      name.style.opacity = '1';
      name.style.maxWidth = '1000px';
    }

    // hide intro and show content
    if (intro) intro.style.display = 'none';
    if (contentContainer) {
      contentContainer.style.display = 'block';
      setTimeout(() => {
        contentContainer.classList.add('visible');
        const firstButton = document.querySelector('.nav-button[data-section="about"]');
        const firstSection = document.querySelector('.section-content[data-section="about"]');
        firstButton?.classList.add('active');
        if (firstSection instanceof HTMLElement) firstSection.classList.add('active');
        // If the user skipped the intro, ensure the explosion still runs only once
        try {
          if (!window.__introExplodedDone) {
            window.__introExplodedDone = true;
            document.dispatchEvent(new CustomEvent('intro-finished'));
          }
        } catch (e) {}
      }, 50);
    }
  }

  tHi = setTimeout(() => {
    if (hi) {
      hi.style.transition = 'opacity 0.6s ease-in';
      hi.style.opacity = '1';
    }
  }, 600);

  tName = setTimeout(() => {
    if (name) {
      name.style.transition = 'opacity 0.6s ease-in, max-width 0.6s ease-in';
      name.style.opacity = '1';
      name.style.maxWidth = '1000px';
    }
  }, 2000);

  tFadeStart = setTimeout(() => {
    intro?.classList.add('fade-out');
    tFadeEnd = setTimeout(() => {
      if (intro) intro.style.display = 'none';
      if (contentContainer) {
        contentContainer.style.display = 'block';
        tShowVisible = setTimeout(() => {
          contentContainer.classList.add('visible');
          const firstButton = document.querySelector('.nav-button[data-section="about"]');
          const firstSection = document.querySelector('.section-content[data-section="about"]');
          firstButton?.classList.add('active');
          if (firstSection instanceof HTMLElement) {
            firstSection.classList.add('active');
          }
          finishAnim();
        }, 50);
      }
    }, 600);
  }, 3500);

  // Allow a single tap/click to skip the intro while animating.
  function onSkipOrNavClick(e: Event) {
  const ev = e;
  const target = (ev.target || ev.srcElement);

    if (animating) {
      e.preventDefault?.();
      revealContentImmediately();
      return;
    }

    if (target.classList.contains('nav-button')) {
      const sectionId = target.dataset.section;

      document.querySelectorAll('.nav-button').forEach(btn => btn.classList.remove('active'));
      document.querySelectorAll('.section-content').forEach(section => section.classList.remove('active'));

      target.classList.add('active');
      const sectionToShow = document.querySelector(`.section-content[data-section="${sectionId}"]`);
      sectionToShow?.classList.add('active');
    }
  }

  document.addEventListener('click', onSkipOrNavClick);
  // also listen for touchstart so mobile taps skip immediately (fast)
  document.addEventListener('touchstart', (e) => {
    if (animating) {
      e.preventDefault();
      revealContentImmediately();
    }
  }, { passive: false });
</script>